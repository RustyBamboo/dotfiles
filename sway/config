# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu wofi --show drun
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $lock 'swaylock -s fill -i /home/daniel/.config/sway/wallpaper-blurred.png --inside-color 00000000'
set $screenshare '/home/daniel/.config/sway/sway-screenshare.sh'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/f31/default/normalish/f31.png fill
output * bg /home/daniel/.config/sway/wallpaper.jpg fill

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec wlogout
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar    
}
include /etc/sway/config.d/*


output DP-3 scale 1 pos 0 0 
output DP-3 transform 270
output DP-2 scale 2 pos 1200 0 
output HDMI-A-1 scale 1 pos 3120 0

exec swayidle -S seat0 \
    timeout 300 $lock \
    timeout 600 'swaymsg "output * dpms off"' \
      resume 'swaymsg "output * dpms on"' \
    before-sleep $lock


#seat seat_wacom attach "11551:886:Wacom_Co.,Ltd._Intuos_BT_S"
seat seat_wacom attach "1386:886:Wacom_Intuos_BT_S_Pen"
seat seat_wacom attach "1386:886:Wacom_Intuos_BT_S_Pad"
seat seat_wacom hide_cursor 10000
#seat seat_wacom idle_inhibit tablet_tool
#seat seat_wacom idle_wake tablet_tool
#seat seat_wacom keyboard_grouping none

seat seat0 hide_cursor 10000

input "1386:886:Wacom_Intuos_BT_S_Pen" {
#    map_to_output DP-2
    map_to_region 1210 10 1900 1070
}

#input "11551:886:Wacom_Co.,Ltd._Intuos_BT_S" {
#    map_to_region 1210 10 1900 1070
#}




#bindsym $mod+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $HOME/Pictures/$(date +'%Y-%m-%d-%H%M%S_grim.png')
#bindsym $mod+Shift+Print exec grim -g "$(slurp)" $HOME/Pictures/$(date +'%Y-%m-%d-%H%M%S_grim.png')

bindsym $mod+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | swappy -f -
bindsym $mod+Shift+Print exec grim -g "$(slurp)" - | swappy -f -
bindsym $mod+Shift+F8 exec $screenshare


#for_window [title="."] title_format "%app_id %title"
#for_window [shell="xwayland"] title_format "[X] %app_id %title"

gaps inner 4

# Hack solution for buggy reappearence of the default_border
#default_border pixel 2
font pango:monospace 0
titlebar_border_thickness 1
titlebar_padding 5


#                            Border     Backgrd     Text     Indicator  child_bord
client.focused              "#fdf6e3AA" "#1E1F23FF" "#ffffff" "#81D425" "#285577"
client.focused_inactive     "#222222" "#1E1F23E6" "#ffffff" "#484e50" "#5f676a"
client.unfocused            "#333333" "#1E1F23E6" "#888888" "#2e9ef4" "#222222"

# Preset workspaces
workspace 1 output DP-2
workspace 2 output HDMI-A-1
workspace 3 output DP-3
workspace 10 output HDMI-A-1


assign [app_id ="^ColinDuquesnoy.gitlab.com.MellowPlayer"] → 10
assign [class ="^discord"] → 10

for_window [app_id="keepassxc"] floating enable
for_window [class="^Pavucontrol$"] floating enable
for_window [app_id="pavucontrol"] floating enable

#exec --no-startup-id swaymsg 'workspace 2; exec alacritty --  zsh -c "todo.sh list; exec zsh"'
exec mako
exec gammastep -l 40.713050:-74.007230 -b 1.0:0.65
exec opensnitch-ui
exec MellowPlayer

# Create a socket to pipe into wob to display a bar
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob

# Modify sound and feed into pipe using alsa
# Raise
bindsym $mod+F11 exec amixer -q set Master 2%+ unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob
# Lower
bindsym $mod+F10 exec amixer -q set Master 2%- unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob
# Mute
bindsym $mod+F9 exec (amixer get Master | grep off > /dev/null && amixer -q set Master unmute && amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' > $SWAYSOCK.wob) || (amixer -q set Master mute && echo 0 > $SWAYSOCK.wob)
